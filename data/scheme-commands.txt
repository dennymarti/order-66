DROP DATABASE IF EXISTS order66;
CREATE DATABASE order66;
USE order66;

DROP TABLE IF EXISTS order66.user;
CREATE TABLE order66.user (
    id INTEGER PRIMARY KEY AUTO_INCREMENT, 
    firstname VARCHAR(64) NOT NULL,
    name VARCHAR(64) NOT NULL,
    username VARCHAR(64) NOT NULL UNIQUE,
    `password` VARCHAR(255) NOT NULL
);

DROP TABLE IF EXISTS order66.bread;
CREATE TABLE order66.bread (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(64) NOT NULL,
    price FLOAT NOT NULL
);

DROP TABLE IF EXISTS order66.length;
CREATE TABLE order66.length (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    cm INTEGER NOT NULL,
    price FLOAT NOT NULL
);

DROP TABLE IF EXISTS order66.categorie;
CREATE TABLE order66.categorie (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(64) NOT NULL
);

DROP TABLE IF EXISTS order66.topping;
CREATE TABLE order66.topping (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(64) NOT NULL,
    price FLOAT NOT NULL,
    categorieId INTEGER NOT NULL,
    FOREIGN KEY (categorieId) REFERENCES categorie(id)
);

DROP TABLE IF EXISTS order66.order;
CREATE TABLE order66.order (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    `date` DATETIME NOT NULL,
    userId INTEGER NOT NULL,
    FOREIGN KEY (userId) REFERENCES `user`(id),
    breadId INTEGER NOT NULL,
    FOREIGN KEY (breadId) REFERENCES bread(id),
    lengthId INTEGER NOT NULL,
    FOREIGN KEY (lengthId) REFERENCES length(id)
);

DROP TABLE IF EXISTS order66.order_topping;
CREATE TABLE order66.order_topping (
    orderId INTEGER NOT NULL,
    FOREIGN KEY (orderId) REFERENCES `order`(id),
    toppingId INTEGER NOT NULL,
    FOREIGN KEY (toppingId) REFERENCES topping(id),
    PRIMARY KEY (orderId, toppingId)
);